1. 过渡
         1.1 transition
         1.2 过渡时从一种状态到另外一种状态，通常有触发条件（★★例：div:hover{}）,过度都是写在开始状态
         1.3 过渡时间 transition-duration：2s;
         1.4 过渡时间 transition-duration：2s
         1.5 需要过渡的属性 transition-property:all;
         1.6 过度的速度曲线 transition-timing-function:linear|ease;(匀速|默认值慢块慢)
         1.7 连写 transition：all 3s；

2. 2D
         2.1 transform 表示2D 3D的转化入口
         2.2 移动translate
	transform:translateX(100px); transform:translateX(100%);
	a. ★★%在这里表示自身宽高的100%
	    ★★3D的Z轴不能设置百分号%，因为没有厚度属性，没效果
	b. 移动与定位的区别
	     b.1 定位：①会影响其他盒子（脱离标准流）②可以使行内元素具有块级元素的特点
	     b2  移动：①不会影响其他的盒子 ②对行内元素无效 ③translate（50%）50%是基于自身宽高的一半
         2.3旋转rotate
	a. transform:rotate(45deg);
	b. ★★默认以中心点旋转
	c. 改变中心点transform-origin
	       c.1  transform-origin:left bottom;
	              transform-origin:100px 50px;
	              transform-origin:50% 50%;
	d. 伪元素div:hover::before { }	
	        d.1  引用场景：做一些小图标...
	        d.2  属于行内元素
		content:"";不能没有
		伪元素用在双标签上
         2.4 缩放 scale
	a.  transform:scale(2,3);  里面的数字代表放大自身宽高的倍数
	b.  重点：受中心点的影响
	     缩放会使父元素下面的子元素，文字，css样式都缩放

         2.5 连写 
	a.  transform:translateX(100px) rotate(45deg) scale(2);
	b.  /* 移动在旋转前面 */  transform: translate(x,y) rotate(90deg) scale(x,y);
	c.  /* 旋转在前面 会改变初始换轴变化  transform: rotate(90deg) translate(x,y) scale(x,y); 
	d.  ★★使用顺序不同，出现的效果不同，因为旋转会改变初始轴向；
	
3. 3D
         3.1  3D也有2D的属性
         3.2  3D需要在父元素（通常在body中）设置视距 
	a .perspective:500px;
	     特点：近大远小
	     视距表示浏览器与物体的距离
	     视距值越小，3D效果越明显
	     视距越大，效果不明显
         3.3  3D效果必须在上一级（父元素）里设置 transform-style：preserve-3D; 
         3.4  左手工具   判断旋转方向

4. 动画  animation
         4.1  定义@ketframes  自定义动画名称{ }
         4.2  调用    在标签的样式里调用animation：name duration timing-function delay iteration-count dircetion fill-mode
         4.3  属性 
	a.  动画名称（调用）animation-name：dong_hua；
	b.  动画时间 animation-duration：2s；
	c.  动画速度曲线  animation-timing-function：ease|linear；
	     ★★animation-timing-function：steps（8）；适用于分帧图
	d.  动画延迟时间  animation-delay：2s；
	e.  动画循环次数  animation-iteration-cound：infinite；无限次
	f.   动画的方向  animation-diraction：normal；
	g.  动画等待或结束的状态 
	     animation-fill-mode：forwards；表示动画结束后，元素样式停留在 100% 的样式
	     animation-fill-mode：backwards；在延迟等待的时间内，元素样式停留在 0% 的样式 
    	     动画结束的时候，回到div本身的样式（回到起始状态）
         4.4  animation-play-state：暂停和播放
	a.  /*1 播放 */   animation-play-state: running;
    	b. /*2 暂停*/     animation-play-state: paused;	
         4.5  动画序列 (动画节点）
	a. @keyframes name {/* 开始状态:*/from {  写css任意样式}  /* 结束状态 */to {  写css任意样式}}
	b. @keyframes name { 0%{  }  75%{ } 100% {  }}
         4.6  组动画：需要用 逗号 隔开
	a.  animation: name_1 5s linear,name_2 2s linear;



